"use strict";(self.webpackChunkmikechesterwang_github_io=self.webpackChunkmikechesterwang_github_io||[]).push([[477],{10:function(e){e.exports=JSON.parse('{"blogPosts":[{"id":"/index","metadata":{"permalink":"/blog/index","source":"@site/blog/index.md","title":"Index","description":"Introduction to Mike Chester Wang","date":"2022-04-14T13:57:03.000Z","formattedDate":"April 14, 2022","tags":[{"label":"mcw","permalink":"/blog/tags/mcw"}],"readingTime":0.01,"truncated":false,"authors":[{"name":"Mike Wang","title":"Coder","url":"https://github.com/mikechesterwang","imageURL":"https://avatars.githubusercontent.com/u/52522981","key":"mike"}],"frontMatter":{"title":"Index","description":"Introduction to Mike Chester Wang","authors":["mike"],"tags":["mcw"],"hide_table_of_contents":false},"nextItem":{"title":"Awesome/js","permalink":"/blog/awesome/js"}},"content":"Hello world"},{"id":"/awesome/js","metadata":{"permalink":"/blog/awesome/js","source":"@site/blog/awesome/js.md","title":"Awesome/js","description":"Awesome JavaScript library","date":"2022-04-14T13:57:03.000Z","formattedDate":"April 14, 2022","tags":[{"label":"JavaScript","permalink":"/blog/tags/java-script"}],"readingTime":0.18,"truncated":false,"authors":[{"name":"Mike Wang","title":"Coder","url":"https://github.com/mikechesterwang","imageURL":"https://avatars.githubusercontent.com/u/52522981","key":"mike"}],"frontMatter":{"title":"Awesome/js","description":"Awesome JavaScript library","authors":["mike"],"tags":["JavaScript"],"hide_table_of_contents":false},"prevItem":{"title":"Index","permalink":"/blog/index"},"nextItem":{"title":"js/form","permalink":"/blog/js/form"}},"content":"## Web SSH\\n[webssh2](https://github.com/billchurch/webssh2), a ssh client in browser, built by \\n - [ssh2](https://github.com/mscdex/ssh2): a ssh client and server module for node.js\\n - [socket.io](https://github.com/socketio/socket.io): realtime application server framework based on WebSocket\\n - [xterm.js](https://github.com/xtermjs/xterm.js): terminal renderer in browser"},{"id":"/js/form","metadata":{"permalink":"/blog/js/form","source":"@site/blog/js/form.md","title":"js/form","description":"Form validation","date":"2022-04-14T13:57:03.000Z","formattedDate":"April 14, 2022","tags":[{"label":"JavaScript","permalink":"/blog/tags/java-script"}],"readingTime":0.66,"truncated":false,"authors":[{"name":"Mike Wang","title":"Coder","url":"https://github.com/mikechesterwang","imageURL":"https://avatars.githubusercontent.com/u/52522981","key":"mike"}],"frontMatter":{"title":"js/form","description":"Form validation","authors":["mike"],"tags":["JavaScript"],"hide_table_of_contents":false},"prevItem":{"title":"Awesome/js","permalink":"/blog/awesome/js"}},"content":"Define validation rules and corresponding messages with `yup`.\\n```JavaScript\\nimport * as yup from \\"yup\\";\\nconst schema = yup.object().shape({\\n    email: yup.string().email(\\"Invalid email\\").required(\\"Email is required\\"),\\n    password: yup.string().required(\\"Password is required\\"),\\n    confirmPassword: yup.string().required(\\"Confirm password\\")\\n        .test(\\"pwd-match\\", \\"Passwords must match\\", function(value) => {\\n            return this.parent.password === value;\\n        })\\n})\\n```\\n\\nResolve `yup` schema and make it a react hook state with `@hookform/resolvers`.\\n```JavaScript\\nimport { yupResolver } from \'@hookform/resolvers/yup\';\\nexport default function Index(props){\\n    const {\\n        register, \\n        handleSubmit, \\n        handleSubmit,\\n        formState: {errors}\\n    } = useForm({\\n        mode: \\"all\\",\\n        resolver: yupResolver(schema)\\n    })\\n    return (<>\\n        ...\\n    </>)\\n}\\n```\\n\\nRegister form component to the form.\\n```JavaScript\\nimport {TextField} from \\"@mui/material\\";\\nexport default function Index(props){\\n    ...\\n    const onSubmit = (data) => console.log(\\"form: \\" + data);\\n    return (<>\\n        <form onSubmit={handleSubmit(onSubmit)}>\\n            <TextField\\n                label=\\"Email\\"\\n                {...register(\\"email\\")}\\n                error={errors.email?.message? true : false}\\n                helperText={errors.email?.message}\\n            />\\n            ...\\n        </form>\\n    </>)\\n}\\n```"}]}')}}]);